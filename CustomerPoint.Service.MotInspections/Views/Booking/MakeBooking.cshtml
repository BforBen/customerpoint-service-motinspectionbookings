@model CustomerPoint.Service.MotInspections.Models.BookingModel
@{
    ViewBag.Title = "Booking details";
}

<div class="page-header">
    <h1>@ViewBag.Title</h1>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.CustomerId)
    @Html.HiddenFor(m => m.ServiceId)
    @Html.HiddenFor(m => m.ReservationId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <p class="h3">This is a booking for a:</p>

    <div class="row h1">
        <div class="col-sm-5 text-center">
            <h2><small>@Html.DisplayFor(model => model.Customer)</small> @Html.DisplayFor(model => model.Service)</h2>
        </div>
        <div class="col-sm-1 text-center h1 small vertical-align-middle">
            on
        </div>
        <div class="col-sm-5 text-center">
            <h2>@Model.Slot.ToString("dddd d MMMM yyyy")</h2>
            <p class="small">at</p>
            <p>@Model.Slot.ToString("H:mmtt").ToLower()</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h2>Your details</h2>

            <div class="form-group @(Html.ValidationErrorFor(model => model.Name, "has-error"))">
                @Html.LabelFor(model => model.Name)
                @Html.DescriptionFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "help-block" })
                @Html.EditorFor(model => model.Name, string.Empty, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="form-group @(Html.ValidationErrorFor(model => model.Telephone, "has-error"))">
                @Html.LabelFor(model => model.Telephone)
                @Html.DescriptionFor(model => model.Telephone)
                @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "help-block" })
                @Html.EditorFor(model => model.Telephone, string.Empty, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <h2>Vehicle details</h2>

            <div class="form-group vehicle-lookup @(Html.ValidationErrorFor(model => model.VehicleReg, "has-error"))">
                @Html.LabelFor(model => model.VehicleReg)
                @Html.DescriptionFor(model => model.VehicleReg)
                @Html.ValidationMessageFor(model => model.VehicleReg, "", new { @class = "help-block" })
                <div class="input-group">
                    @Html.TextBox("VehicleRegQ", string.Empty, new { @class = "form-control text-upper", maxlength = "8", placeholder = "e.g. AB12 3CD" })
                    <span class="input-group-btn">
                        <button class="btn btn-default btn-vehicle-lookup" type="button">Lookup vehicle details</button>
                    </span>
                </div>
            </div>

        </div>
    </div>

    if (!string.IsNullOrWhiteSpace(Model.VehicleReg))
    {
        <div class="row" id="vehicle-details" data-src="@Url.Action("Info", "Vehicle")">
            @Html.Action("Info", "Vehicle", new { vrm = Model.VehicleReg })
        </div>
    }
    else
    {
        <div class="row hide spinner" id="vehicle-details" data-src="@Url.Action("Info", "Vehicle")"></div>
    }

    <div class="row">
        <div class="col-md-6">
            @if (Model.Customer != "Public")
            {
                <div class="form-group @(Html.ValidationErrorFor(model => model.VehiclePlate, "has-error"))">
                    @Html.LabelFor(model => model.VehiclePlate)
                    @Html.DescriptionFor(model => model.VehiclePlate)
                    @Html.ValidationMessageFor(model => model.VehiclePlate, "", new { @class = "help-block" })
                    @Html.EditorFor(model => model.VehiclePlate, string.Empty, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            }
        </div>
    </div>

    if (Model.PriceToPay > 0)
    {
        <h2>Payment</h2>

        <p>The total to pay is <strong>@Html.DisplayFor(model => model.PriceToPay)</strong>. Please choose when you would like to pay.</p>

        <div class="form-group @(Html.ValidationErrorFor(model => model.PriceToPay, "has-error"))">
            <div class="radio">
                <label>
                    <input type="radio" name="PriceToPay" value="@Model.PriceToPay">
                    @Html.DisplayNameFor(model => model.PriceToPay)
                </label>
            </div>

            <p class="form-control-static">or</p>

            <div class="radio">
                <label>
                    <input type="radio" name="PriceToPay" value="0">
                    @Html.DisplayNameFor(model => model.PayLater)
                </label>
            </div>
        </div>
    }
    else
    {
        <input type="hidden" name="PriceToPay" value="-1">
    }

    <div class="form-group">
        <button type="submit" class="btn btn-lg btn-primary">
            Make booking
        </button>
    </div>
}

<p>@Html.ActionLink("Back", "SelectTime", new { service = ViewBag.ServiceSlug, customer = ViewBag.CustomerSlug }, new { @class = "btn btn-lg btn-link text-left" })</p>

@section FooterScripts
{
    <script>
        jQuery(function ($) {
            $(document).on('click', '.btn-vehicle-lookup', function () {
                var vrmi = $(this).parent().siblings('input'),
                    vrm = vrmi.val() || '';

                if (vrm == '')
                    return;

                vrm = vrm.toUpperCase();

                var vh = $('#vehicle-details');
                vh.removeClass('hide');
                $.get(vh.data('src') + '?vrm=' + vrm, function (view) {
                    vh.removeClass('spinner').html(view);
                    $('html, body').animate({
                        scrollTop: (vh.offset().top - 200)
                    }, 500);
                });
            });

            $(document).on('keypress', '.vehicle-lookup input[type="text"]', function (event) {
                if (event.keyCode === 10 || event.keyCode === 13) {
                    event.preventDefault();
                    $('.btn-vehicle-lookup').click();
                    vrmi.val('');
                }
            });
        });
    </script>
}