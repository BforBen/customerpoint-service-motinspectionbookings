@model CustomerPoint.Service.MotInspections.Admin.Models.BookingViewModel
@{
    ViewBag.Title = "Bookings";
    var TheDate = (DateTime)ViewBag.Date;
    var ActiveMonth = (DateTime)ViewBag.ActiveMonth;
    var BankHolidays = (List<DateTime>)ViewBag.BankHolidays;
}

<div class="row">
    <div class="col-md-5">
        <div class="BookingCalendar">
            <div class="BookingCalendar-header">
                @using (Html.BeginForm())
                {
                <button type="submit" class="BookingCalendar-nav BookingCalendar-nav--prev btn btn-link" name="month" value="@ActiveMonth.AddMonths(-1).ToString("yyyy-M-d")"><span class="glyphicon glyphicon-menu-left"></span></button>
                <span class="BookingCalendar-currentMonth">@ActiveMonth.ToString("MMMM")</span>
                <button type="submit" class="BookingCalendar-nav BookingCalendar-nav--next btn btn-link" name="month" value="@ActiveMonth.AddMonths(1).ToString("yyyy-M-d")"><span class="glyphicon glyphicon-menu-right"></span></button>
                }
            </div>

            <table class="booking-calendar">
                <thead>
                    <tr>
                        <th>Mon</th>
                        <th>Tue</th>
                        <th>Wed</th>
                        <th>Thu</th>
                        <th>Fri</th>
                        <th>Sat</th>
                        <th>Sun</th>
                    </tr>
                </thead>
            </table>

            <div class="BookingCalendar-mask">
                <table class="booking-calendar">
                    <tbody class="BookingCalendar-datesBody">
                        @{
                            var StartDate = ViewBag.StartDate;
                            var EndDate = ViewBag.EndDate;
                            var i = 0;
                            var CssClass = "";
                            var Title = "";
                        }

                        <tr>
                            @while (StartDate <= EndDate)
                            {
                                {
                                    i++;
                                    if (!BankHolidays.Contains(StartDate))
                                    {
                                        CssClass = "BookingCalendar-date--bookable";
                                    }

                                    Title = StartDate.ToString("dddd d MMMM") + (BankHolidays.Contains(StartDate) ? " - Bank Holiday" : "");
                                }
                                <td title="@Title" class="@CssClass">
                                    <div class="BookingCalendar-content">
                                        <a class="BookingCalendar-dateLink" data-date="@StartDate.ToString("yyyy-MM-dd")" href="#date-@StartDate.ToString("yyyy-MM-dd")">
                                            <span class="BookingCalendar-day">@StartDate.Day</span>
                                            @if (StartDate == DateTime.Today)
                                            {
                                                <span class="BookingCalendar-tag BookingCalendar-tag--today">Today</span>
                                            }
                                            @if (StartDate.Day == 1)
                                            {
                                                <span class="BookingCalendar-tag" id="month-2016-07">@StartDate.ToString("MMM")</span>
                                            }
                                            @if (BankHolidays.Contains(StartDate))
                                            {
                                                <span class="BookingCalendar-tag BookingCalendar-tag--bankHoliday">BH</span>
                                            }
                                        </a>
                                    </div>
                                </td>
                                if (i == 7)
                                {
                                    @Html.Raw("</tr><tr>")
                                    i = 0;
                                }
                                {
                                    StartDate = StartDate.AddDays(1);
                                    CssClass = "";
                                }
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <ul class="BookingCalendar-legend list-inline">
            <li>
                <div class="BookingCalendar-legendBox BookingCalendar-legendBox--available"></div>
                <p class="BookingCalendar-legendDesc">Availability</p>
            </li>
            <li>
                <div class="BookingCalendar-legendBox BookingCalendar-legendBox--unavailable"></div>
                <p class="BookingCalendar-legendDesc">No availability</p>
            </li>
        </ul>

    </div>

</div>

<h3>Bookings for @(TheDate.ToString("ddd d MMMM yyyy"))</h3>
@if (TheDate.DayOfWeek == DayOfWeek.Saturday || TheDate.DayOfWeek == DayOfWeek.Sunday)
{
    <div class="alert alert-info">
        There are no bookings at weekends.
    </div>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th width="10%">Time</th>
                @{
                    var Resources = Model.Resources.Where(r => r.ParentId.HasValue || r.Resources.Count() == 0);
                    var Width = 90 / Resources.Count();
                }
                @foreach (var Resource in Resources)
                {
                    <th width="@Width%">@Resource.Name</th>
                }
            </tr>
        </thead>
        <tbody>
        @{
            var Slot = new TimeSpan(8, 00, 00);
            var Lunch = new TimeSpan(13, 00, 00);
            var EndOfDay = new TimeSpan(16, 30, 00);
        }
        @do
        {
            <tr>
                <td>@Slot.ToString(@"hh\:mm")</td>
                @{
                    var SlotBookings = Model.Bookings.Where(b => b.Date.TimeOfDay.Equals(Slot));
                    var SlotReservations = Model.Reservations.Where(b => b.Date.TimeOfDay.Equals(Slot));
                }
                @foreach (var Resource in Resources)
                {
                    var ResourceBooking = SlotBookings.Where(b => b.ResourceId == Resource.Id).SingleOrDefault();
                    var ResourceReservation = SlotReservations.Where(b => b.ResourceId == Resource.Id).SingleOrDefault();
                    <td>
                        @if (ResourceBooking != null)
                        {
                            @Html.DisplayFor(y => ResourceBooking, new { Date = ViewBag.Date, Time = Slot, Resource = Resource })
                        }
                        else
                        {
                            @Html.DisplayFor(y => ResourceReservation)
                        }
                    </td>
                }
            </tr>
            {
                Slot = Slot.Add(new TimeSpan(1, 0, 0));
            }
        } while (Slot < Lunch);
        <tr>
            <td colspan="@(Resources.Count() + 1)"></td>
        </tr>
    @if (!TheDate.DayOfWeek.Equals(DayOfWeek.Friday))
    {
        {
            Slot = new TimeSpan(13, 30, 00);
        }

        do
        {
            <tr>
                <td>@Slot.ToString(@"hh\:mm")</td>
                @{
                    var SlotBookings = Model.Bookings.Where(b => b.Date.TimeOfDay.Equals(Slot));
                    var SlotReservations = Model.Reservations.Where(b => b.Date.TimeOfDay.Equals(Slot));
                }
                @foreach (var Resource in Resources)
                {
                    var ResourceBooking = SlotBookings.Where(b => b.ResourceId == Resource.Id).SingleOrDefault();
                    var ResourceReservation = SlotReservations.Where(b => b.ResourceId == Resource.Id).SingleOrDefault();
                    <td>
                        @if (ResourceBooking != null)
                        {
                            @Html.DisplayFor(y => ResourceBooking, new { Date = ViewBag.Date, Time = Slot, Resource = Resource })
                        }
                        else
                        {
                            @Html.DisplayFor(y => ResourceReservation)
                        }
                    </td>
                }
            </tr>
            {
                Slot = Slot.Add(new TimeSpan(1, 0, 0));
            }
        } while (Slot < EndOfDay);
    }
        </tbody>
    </table>
}